@model TimesheetManagement.Client.Mvc.Tasks.Entities.TaskActivity

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Activity.ActivityId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Task.Project.Client.TaxpayerIdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Task.Project.Client.TaxpayerIdentificationNumber, (SelectList) ViewBag.Accounts, "", htmlAttributes: new {id = "accounts-dropdown", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Task.Project.Client.TaxpayerIdentificationNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Task.Project.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Task.Project.ProjectId, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { id = "projects-dropdown", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Task.Project.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Task.TaskId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Task.TaskId, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { id = "tasks-dropdown", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Task.TaskId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Activity.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Activity.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.DurationInHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity.DurationInHours, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                @Html.ValidationMessageFor(model => model.Activity.DurationInHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Activity.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2 col-md-offset-2">
                <input type="submit" class="btn btn-primary" value="Save"/>
                <input type="button" class="btn btn-default" value="Cancel" />
            </div>
        </div>
    
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/taskactivity")
}
